{
  "version": "1.0.0",
  "metadata": {
    "projectName": "InventOnBot - Discord Q&A Bot",
    "createdAt": "2025-06-13T20:09:26.000Z",
    "lastModified": "2025-06-13T20:09:26.000Z"
  },
  "tasks": [
    {
      "id": "1",
      "title": "프로젝트 환경 설정 및 초기 구조 생성",
      "description": "Python 환경 설정, Discord.py 설치, 프로젝트 폴더 구조 생성",
      "status": "pending",
      "priority": "high",
      "details": "- Python 가상환경 생성\n- discord.py, python-dotenv 등 필수 라이브러리 설치\n- 기본 폴더 구조 생성 (bot/, utils/, database/, config/)",
      "testStrategy": "설치된 패키지 확인 및 폴더 구조 검증",
      "dependencies": [],
      "subtasks": [
        {
          "id": "1.1",
          "title": "Python 가상환경 생성",
          "description": "프로젝트용 Python 가상환경 설정",
          "status": "pending",
          "details": "venv 또는 conda를 사용하여 독립적인 Python 환경 생성"
        },
        {
          "id": "1.2",
          "title": "필수 라이브러리 설치",
          "description": "Discord.py 및 관련 라이브러리 설치",
          "status": "pending",
          "details": "discord.py, python-dotenv, aiofiles, aiosqlite 설치"
        },
        {
          "id": "1.3",
          "title": "프로젝트 폴더 구조 생성",
          "description": "기본 디렉토리 구조 생성",
          "status": "pending",
          "details": "bot/, utils/, database/, config/, logs/ 폴더 생성"
        },
        {
          "id": "1.4",
          "title": "환경 설정 파일 생성",
          "description": ".env 및 config.py 파일 생성",
          "status": "pending",
          "details": "환경변수 템플릿 및 설정 파일 구조 생성"
        }
      ]
    },
    {
      "id": "2",
      "title": "데이터베이스 스키마 설계 및 구현",
      "description": "질문, 사용자, 답변을 저장할 데이터베이스 스키마 설계",
      "status": "pending",
      "priority": "high",
      "details": "- SQLite 데이터베이스 설계\n- 테이블: questions, users, answers, threads\n- ORM 또는 직접 SQL 구현",
      "testStrategy": "데이터베이스 연결 및 CRUD 테스트",
      "dependencies": ["1"],
      "subtasks": []
    },
    {
      "id": "3",
      "title": "Discord 봇 기본 설정 및 연결",
      "description": "Discord 봇 토큰 설정, 기본 봇 클래스 구현",
      "status": "pending",
      "priority": "high",
      "details": "- Discord 애플리케이션 생성\n- 봇 토큰 환경변수 설정\n- 기본 봇 클래스 및 이벤트 핸들러 구현",
      "testStrategy": "봇 온라인 상태 확인",
      "dependencies": ["1"],
      "subtasks": []
    },
    {
      "id": "4",
      "title": "슬래시 커맨드 (/질문) 구현",
      "description": "질문 제출을 위한 슬래시 커맨드 구현",
      "status": "pending",
      "priority": "high",
      "details": "- /질문 슬래시 커맨드 등록\n- 모달 폼으로 질문 입력 받기\n- 필수/선택 필드 검증",
      "testStrategy": "커맨드 실행 및 모달 표시 확인",
      "dependencies": ["2", "3"],
      "subtasks": []
    },
    {
      "id": "5",
      "title": "질문 폼 모달 UI 구현",
      "description": "구조화된 질문 입력을 위한 모달 폼 구현",
      "status": "pending",
      "priority": "medium",
      "details": "- OS, 프로그래밍 언어 (필수)\n- 에러 메시지, 목적 (필수)\n- 코드, 로그, 스크린샷, 시도한 조치 (선택)\n- 입력 검증 및 에러 처리",
      "testStrategy": "모달 폼 입력 및 검증 테스트",
      "dependencies": ["4"],
      "subtasks": []
    },
    {
      "id": "6",
      "title": "프라이빗 스레드 생성 시스템",
      "description": "질문별 프라이빗 스레드 자동 생성",
      "status": "pending",
      "priority": "high",
      "details": "- 질문 제출 시 자동 스레드 생성\n- 질문자와 관리자만 접근 가능\n- 스레드 제목에 질문 요약 포함",
      "testStrategy": "스레드 생성 및 권한 확인",
      "dependencies": ["5"],
      "subtasks": []
    },
    {
      "id": "7",
      "title": "권한 및 접근 제어 시스템",
      "description": "사용자별 질문 접근 권한 관리",
      "status": "pending",
      "priority": "high",
      "details": "- 관리자 역할 확인\n- 질문자 본인 확인\n- 타인 질문 접근 차단",
      "testStrategy": "다양한 사용자로 접근 권한 테스트",
      "dependencies": ["6"],
      "subtasks": []
    },
    {
      "id": "8",
      "title": "관리자 응답 시스템",
      "description": "관리자가 질문에 응답할 수 있는 시스템",
      "status": "pending",
      "priority": "medium",
      "details": "- 스레드 내 응답 기능\n- 상태 변경 (답변완료, 진행중 등)\n- 질문자 알림 기능",
      "testStrategy": "관리자 응답 및 알림 테스트",
      "dependencies": ["7"],
      "subtasks": []
    },
    {
      "id": "9",
      "title": "코드 포맷팅 및 문법 하이라이팅",
      "description": "코드 블록 자동 포맷팅 기능",
      "status": "pending",
      "priority": "low",
      "details": "- 언어별 문법 하이라이팅\n- 코드 블록 자동 정리\n- 긴 코드 파일 첨부 지원",
      "testStrategy": "다양한 언어 코드 포맷팅 테스트",
      "dependencies": ["8"],
      "subtasks": []
    },
    {
      "id": "10",
      "title": "FAQ 시스템",
      "description": "자주 묻는 질문 관리 시스템",
      "status": "pending",
      "priority": "low",
      "details": "- FAQ 등록/수정/삭제\n- 키워드 검색 기능\n- 자동 FAQ 추천",
      "testStrategy": "FAQ 관리 및 검색 테스트",
      "dependencies": ["8"],
      "subtasks": []
    },
    {
      "id": "11",
      "title": "로그 및 통계 시스템",
      "description": "질문 통계 및 로그 관리",
      "status": "pending",
      "priority": "low",
      "details": "- 질문 수, 응답 시간 통계\n- 에러 로그 수집\n- 대시보드 구현",
      "testStrategy": "통계 정확성 및 로그 수집 확인",
      "dependencies": ["8"],
      "subtasks": []
    },
    {
      "id": "12",
      "title": "배포 및 운영 설정",
      "description": "봇 배포 환경 구성 및 운영 준비",
      "status": "pending",
      "priority": "medium",
      "details": "- 서버 환경 설정\n- 환경변수 관리\n- 백업 및 복구 계획\n- 모니터링 설정",
      "testStrategy": "배포 환경에서 봇 동작 확인",
      "dependencies": ["11"],
      "subtasks": []
    }
  ]
}